<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>